<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>